<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>